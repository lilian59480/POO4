<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
          "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="charset" value="UTF-8"/>

    <property name="fileExtensions" value="java, properties, xml"/>
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$"/>
    </module>

    <!-- File is too long, may indicate a problem -->
    <module name="FileLength">
        <property name="max" value="300"/>
        <property name="severity" value="info"/>
    </module>

    <!-- Check if header is applied -->
    <module name="Header">
        <property name="headerFile" value="src/test/resources/java.header"/>
        <property name="fileExtensions" value="java"/>
        <property name="severity" value="error"/>
    </module>

    <!-- Add JavaDoc package -->
    <module name="JavadocPackage">
        <property name="severity" value="error"/>
    </module>

    <module name="TreeWalker">
        <!-- Disable checkstyle in generated code -->
        <module name="SuppressionCommentFilter"/>

        <!-- Abbreviations should not be CAPITALISED -->
        <module name="AbbreviationAsWordInName">
            <property name="ignoreFinal" value="false"/>
            <property name="allowedAbbreviationLength" value="1"/>
            <property name="severity" value="warning"/>
        </module>

        <!-- Annotations should be on their own line -->
        <module name="AnnotationLocation">
            <property name="allowSamelineMultipleAnnotations" value="false" />
            <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
            <property name="allowSamelineParameterizedAnnotation" value="false"/>
            <property name="severity" value="warning"/>
        </module>

        <!-- Max length of annonymouos inner classes is 30 lines -->
        <module name="AnonInnerLength">
            <property name="max" value="30"/>
            <property name="severity" value="error"/>
        </module>

        <!-- Java Array style -->
        <module name="ArrayTypeStyle">
            <property name="javaStyle" value="true"/>
            <property name="severity" value="warning"/>
        </module>

        <!-- Fixed order of JavaDoc @clauses -->
        <module name="AtclauseOrder">
            <property name="tagOrder" value="@author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated"/>
            <property name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
            <property name="severity" value="info"/>
        </module>

        <!-- Avoid ternary conditionals -->
        <module name="AvoidInlineConditionals">
            <property name="severity" value="warning"/>
        </module>

        <!-- Avoid useless nested blocks -->
        <module name="AvoidNestedBlocks">
            <property name="severity" value="error"/>
        </module>

        <!-- Do not use star import -->
        <module name="AvoidStarImport">
            <property name="allowClassImports" value="false"/>
            <property name="allowStaticMemberImports" value="false"/>
            <property name="severity" value="error"/>
        </module>

        <!-- Avoid more than 3 booleans operators in one condition -->
        <module name="BooleanExpressionComplexity">
            <property name="max" value="3"/>
            <property name="severity" value="warning"/>
        </module>

        <!-- Force explicit modifiers -->
        <module name="ClassMemberImpliedModifier">
            <property name="severity" value="warning"/>
        </module>

        <!-- If .equals() is defined for a subclass, .equals(Object) must be defined -->
        <module name="CovariantEquals">
            <property name="severity" value="error"/>
        </module>

        <!-- Cyclomatoc complexity should be low -->
        <module name="CyclomaticComplexity">
            <property name="max" value="10"/>
            <property name="severity" value="error"/>
        </module>

        <!-- Specific declaration order :
            Class (static) variables.
                Public class variables
                Protected
                Package level
                Private
            Instance variables.
                Public class variables
                Protected
                Package level
                Private
            Constructors
            Methods
        -->
        <module name="DeclarationOrder">
            <property name="severity" value="warning"/>
        </module>

        <!-- Make sure default is the last element in a switch -->
        <module name="DefaultComesLast">
            <property name="severity" value="warning"/>
        </module>

        <!-- No empty block allowed -->
        <module name="EmptyBlock">
            <property name="severity" value="error"/>
        </module>

        <!-- Prefers "str".equals(var) than var.equals("str") to avoid NPE -->
        <module name="EqualsAvoidNull">
            <property name="severity" value="error"/>
        </module>

        <!-- If equals is defined, hashCode must be alose defined -->
        <module name="EqualsHashCode">
            <property name="severity" value="error"/>
        </module>

        <!-- Avoid toomany executables statements -->
        <module name="ExecutableStatementCount">
            <property name="max" value="20"/>
            <property name="severity" value="info"/>
        </module>

        <!-- Be careful with fallthrough -->
        <module name="FallThrough">
            <property name="severity" value="info"/>
        </module>

        <!-- Check if we are not hiding variables/attributes indirectly -->
        <module name="HiddenField">
            <property name="severity" value="info"/>
            <property name="tokens" value="VARIABLE_DEF"/>
        </module>

        <!-- Tell when we are catching widely -->
        <module name="IllegalCatch">
            <property name="severity" value="info"/>
        </module>

        <!-- Tell when we are throwing widely -->
        <module name="IllegalThrows">
            <property name="severity" value="info"/>
            <property name="illegalClassNames" value="java.lang.Throwable, RuntimeException, Error, Throwable, java.lang.Error, java.lang.RuntimeException, java.lang.Exception, Exception"/>
        </module>

        <!-- Avoid inner assignements -->
        <module name="InnerAssignment">
            <property name="severity" value="info"/>
        </module>

        <!-- Add JavaDoc everywhere -->
        <module name="JavadocMethod">
            <property name="severity" value="error"/>
        </module>

        <!-- Add JavaDoc on variables -->
        <module name="JavadocVariable">
            <property name="scope" value="public"/>
            <property name="severity" value="error"/>
        </module>

        <!-- Avoid magic numbers -->
        <module name="MagicNumber">
            <property name="ignoreFieldDeclaration" value="true"/>
            <property name="ignoreAnnotation" value="true"/>
            <property name="ignoreHashCodeMethod" value="true"/>
            <property name="ignoreNumbers" value="-1, 0, 1, 2"/>
            <property name="severity" value="info"/>
        </module>

        <!-- Too long methods may indicate a problem -->
        <module name="MethodLength">
            <property name="max" value="100"/>
            <property name="severity" value="warning"/>
        </module>

        <!-- Always add default in switch -->
        <module name="MissingSwitchDefault">
            <property name="severity" value="warning"/>
        </module>

        <!-- Check for Java modifier order -->
        <module name="ModifierOrder">
            <property name="severity" value="warning"/>
        </module>

        <!-- Deny multiples variable declaration on one line -->
        <module name="MultipleVariableDeclarations">
            <property name="severity" value="error"/>
        </module>

        <!-- Deny multiples statements on one line -->
        <module name="OneStatementPerLine">
            <property name="severity" value="error"/>
        </module>

        <!-- Each class must have a package declaration -->
        <module name="PackageDeclaration">
            <property name="severity" value="error"/>
        </module>

        <!-- Always add this. -->
        <module name="RequireThis">
            <property name="validateOnlyOverlapping" value="false"/>
            <property name="severity" value="warning"/>
        </module>

        <!-- Avoid "str" == "str" -->
        <module name="StringLiteralEquality">
            <property name="severity" value="warning"/>
        </module>

    </module>
</module>
