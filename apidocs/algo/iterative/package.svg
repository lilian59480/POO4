<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="805px" preserveAspectRatio="none" style="width:854px;height:805px;" version="1.1" viewBox="0 0 854 805" width="854px" zoomAndPan="magnify"><defs><filter height="300%" id="f16214h0847knp" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--cluster algo.iterative--><polygon fill="#FFFFFF" filter="url(#f16214h0847knp)" points="14,168,123,168,130,190.2969,832,190.2969,832,765,14,765,14,168" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="14" x2="130" y1="190.2969" y2="190.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="103" x="18" y="182.9951">algo.iterative</text><!--cluster algo--><polygon fill="#FFFFFF" filter="url(#f16214h0847knp)" points="222,16,261,16,268,38.2969,414,38.2969,414,137,222,137,222,16" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="222" x2="268" y1="38.2969" y2="38.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="33" x="226" y="30.9951">algo</text><!--class algo.iterative.IterativeSolver--><a href="IterativeSolver.html" target="_top" xlink:actuate="onRequest" xlink:show="new" xlink:title="IterativeSolver.html" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f16214h0847knp)" height="150.4375" id="algo.iterative.IterativeSolver" style="stroke: #A80036; stroke-width: 1.5;" width="385" x="125.5" y="195"/><ellipse cx="269.25" cy="211" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M272.2188,216.6406 Q271.6406,216.9375 271,217.0781 Q270.3594,217.2344 269.6563,217.2344 Q267.1563,217.2344 265.8281,215.5938 Q264.5156,213.9375 264.5156,210.8125 Q264.5156,207.6875 265.8281,206.0313 Q267.1563,204.375 269.6563,204.375 Q270.3594,204.375 271,204.5313 Q271.6563,204.6875 272.2188,204.9844 L272.2188,207.7031 Q271.5938,207.125 271,206.8594 Q270.4063,206.5781 269.7813,206.5781 Q268.4375,206.5781 267.75,207.6563 Q267.0625,208.7188 267.0625,210.8125 Q267.0625,212.9063 267.75,213.9844 Q268.4375,215.0469 269.7813,215.0469 Q270.4063,215.0469 271,214.7813 Q271.5938,214.5 272.2188,213.9219 L272.2188,216.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="289.75" y="215.1543">IterativeSolver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="126.5" x2="509.5" y1="227" y2="227"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="133.5" y="235.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="94" x="145.5" y="241.2104">LOGGER: Logger</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="133.5" y="248.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="145.5" y="254.0151">instance: Instance</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="126.5" x2="509.5" y1="260.6094" y2="260.6094"/><ellipse cx="136.5" cy="272.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="145.5" y="274.8198">IterativeSolver(Modifier&lt;Client&gt;, Modifier&lt;Vehicule&gt;)</text><ellipse cx="136.5" cy="285.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="145.5" y="287.6245">IterativeSolver(Instance, Modifier&lt;Client&gt;, Modifier&lt;Vehicule&gt;)</text><ellipse cx="136.5" cy="298.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="145.5" y="300.4292">getInstance(): Instance</text><ellipse cx="136.5" cy="310.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="145.5" y="313.2339">setInstance(Instance): void</text><ellipse cx="136.5" cy="323.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="145.5" y="326.0386">solve(): boolean</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="133.5" y="333.5352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="145.5" y="338.8433">iterativeSolver(): void</text></a><!--class algo.iterative.RandomSolver--><a href="RandomSolver.html" target="_top" xlink:actuate="onRequest" xlink:show="new" xlink:title="RandomSolver.html" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f16214h0847knp)" height="73.6094" id="algo.iterative.RandomSolver" style="stroke: #A80036; stroke-width: 1.5;" width="164" x="22" y="468"/><ellipse cx="56.35" cy="484" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M59.3188,489.6406 Q58.7406,489.9375 58.1,490.0781 Q57.4594,490.2344 56.7563,490.2344 Q54.2563,490.2344 52.9281,488.5938 Q51.6156,486.9375 51.6156,483.8125 Q51.6156,480.6875 52.9281,479.0313 Q54.2563,477.375 56.7563,477.375 Q57.4594,477.375 58.1,477.5313 Q58.7563,477.6875 59.3188,477.9844 L59.3188,480.7031 Q58.6938,480.125 58.1,479.8594 Q57.5063,479.5781 56.8813,479.5781 Q55.5375,479.5781 54.85,480.6563 Q54.1625,481.7188 54.1625,483.8125 Q54.1625,485.9063 54.85,486.9844 Q55.5375,488.0469 56.8813,488.0469 Q57.5063,488.0469 58.1,487.7813 Q58.6938,487.5 59.3188,486.9219 L59.3188,489.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="74.65" y="488.1543">RandomSolver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23" x2="185" y1="500" y2="500"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="23" x2="185" y1="508" y2="508"/><ellipse cx="33" cy="519.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="42" y="522.2104">RandomSolver()</text><ellipse cx="33" cy="532.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="42" y="535.0151">RandomSolver(Instance)</text></a><!--class algo.iterative.Modifier--><a href="Modifier.html" target="_top" xlink:actuate="onRequest" xlink:show="new" xlink:title="Modifier.html" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f16214h0847knp)" height="60.8047" id="algo.iterative.Modifier" style="stroke: #A80036; stroke-width: 1.5;" width="168" x="243" y="696"/><ellipse cx="292.75" cy="712" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M288.6719,707.7656 L288.6719,705.6094 L296.0625,705.6094 L296.0625,707.7656 L293.5938,707.7656 L293.5938,715.8438 L296.0625,715.8438 L296.0625,718 L288.6719,718 L288.6719,715.8438 L291.1406,715.8438 L291.1406,707.7656 L288.6719,707.7656 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="49" x="313.25" y="716.1543">Modifier</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="405" y="693"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="406" y="705.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="244" x2="410" y1="728" y2="728"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="244" x2="410" y1="736" y2="736"/><ellipse cx="254" cy="747.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="142" x="263" y="750.2104">modifyList(List&lt;T&gt;): void</text></a><!--class algo.iterative.NaiveSolver--><a href="NaiveSolver.html" target="_top" xlink:actuate="onRequest" xlink:show="new" xlink:title="NaiveSolver.html" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f16214h0847knp)" height="73.6094" id="algo.iterative.NaiveSolver" style="stroke: #A80036; stroke-width: 1.5;" width="149" x="395.5" y="468"/><ellipse cx="430.75" cy="484" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M433.7188,489.6406 Q433.1406,489.9375 432.5,490.0781 Q431.8594,490.2344 431.1563,490.2344 Q428.6563,490.2344 427.3281,488.5938 Q426.0156,486.9375 426.0156,483.8125 Q426.0156,480.6875 427.3281,479.0313 Q428.6563,477.375 431.1563,477.375 Q431.8594,477.375 432.5,477.5313 Q433.1563,477.6875 433.7188,477.9844 L433.7188,480.7031 Q433.0938,480.125 432.5,479.8594 Q431.9063,479.5781 431.2813,479.5781 Q429.9375,479.5781 429.25,480.6563 Q428.5625,481.7188 428.5625,483.8125 Q428.5625,485.9063 429.25,486.9844 Q429.9375,488.0469 431.2813,488.0469 Q431.9063,488.0469 432.5,487.7813 Q433.0938,487.5 433.7188,486.9219 L433.7188,489.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="449.25" y="488.1543">NaiveSolver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="396.5" x2="543.5" y1="500" y2="500"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="396.5" x2="543.5" y1="508" y2="508"/><ellipse cx="406.5" cy="519.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="415.5" y="522.2104">NaiveSolver()</text><ellipse cx="406.5" cy="532.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="415.5" y="535.0151">NaiveSolver(Instance)</text></a><!--class algo.iterative.CvCostCapacitySortedSolver--><a href="CvCostCapacitySortedSolver.html" target="_top" xlink:actuate="onRequest" xlink:show="new" xlink:title="CvCostCapacitySortedSolver.html" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f16214h0847knp)" height="73.6094" id="algo.iterative.CvCostCapacitySortedSolver" style="stroke: #A80036; stroke-width: 1.5;" width="244" x="580" y="468"/><ellipse cx="611.65" cy="484" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M614.6188,489.6406 Q614.0406,489.9375 613.4,490.0781 Q612.7594,490.2344 612.0563,490.2344 Q609.5563,490.2344 608.2281,488.5938 Q606.9156,486.9375 606.9156,483.8125 Q606.9156,480.6875 608.2281,479.0313 Q609.5563,477.375 612.0563,477.375 Q612.7594,477.375 613.4,477.5313 Q614.0563,477.6875 614.6188,477.9844 L614.6188,480.7031 Q613.9938,480.125 613.4,479.8594 Q612.8063,479.5781 612.1813,479.5781 Q610.8375,479.5781 610.15,480.6563 Q609.4625,481.7188 609.4625,483.8125 Q609.4625,485.9063 610.15,486.9844 Q610.8375,488.0469 612.1813,488.0469 Q612.8063,488.0469 613.4,487.7813 Q613.9938,487.5 614.6188,486.9219 L614.6188,489.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="175" x="629.35" y="488.1543">CvCostCapacitySortedSolver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="581" x2="823" y1="500" y2="500"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="581" x2="823" y1="508" y2="508"/><ellipse cx="591" cy="519.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="600" y="522.2104">CvCostCapacitySortedSolver()</text><ellipse cx="591" cy="532.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="600" y="535.0151">CvCostCapacitySortedSolver(Instance)</text></a><!--class algo.ISolver--><a href="../ISolver.html" target="_top" xlink:actuate="onRequest" xlink:show="new" xlink:title="../ISolver.html" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f16214h0847knp)" height="86.4141" id="algo.ISolver" style="stroke: #A80036; stroke-width: 1.5;" width="177" x="229.5" y="43"/><ellipse cx="292.75" cy="59" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M288.6719,54.7656 L288.6719,52.6094 L296.0625,52.6094 L296.0625,54.7656 L293.5938,54.7656 L293.5938,62.8438 L296.0625,62.8438 L296.0625,65 L288.6719,65 L288.6719,62.8438 L291.1406,62.8438 L291.1406,54.7656 L288.6719,54.7656 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="42" x="313.25" y="63.1543">ISolver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="230.5" x2="405.5" y1="75" y2="75"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="230.5" x2="405.5" y1="83" y2="83"/><ellipse cx="240.5" cy="94.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="128" x="249.5" y="97.2104">getInstance(): Instance</text><ellipse cx="240.5" cy="107.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="151" x="249.5" y="110.0151">setInstance(Instance): void</text><ellipse cx="240.5" cy="120.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="91" x="249.5" y="122.8198">solve(): boolean</text></a><!--link algo.ISolver to algo.iterative.IterativeSolver--><path d="M318,149.2694 C318,163.9024 318,179.6134 318,194.7039 " fill="none" id="algo.ISolver-algo.iterative.IterativeSolver" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="311.0001,149.1399,318,129.1398,325.0001,149.1398,311.0001,149.1399" style="stroke: #A80036; stroke-width: 1.0;"/><!--link algo.iterative.IterativeSolver to algo.iterative.Modifier--><path d="M270.3799,345.3156 C262.0547,364.5392 256,385.6777 256,406.5 C256,406.5 256,406.5 256,619 C256,646.4687 272.3404,672.3227 289.3431,691.7895 " fill="none" id="algo.iterative.IterativeSolver-algo.iterative.Modifier" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="292.7478,695.5963,289.7296,686.2213,289.4146,691.8694,283.7665,691.5544,292.7478,695.5963" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="84" x="266" y="502.0669">clientModifier</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="102" x="257" y="517.1997">vehiculeModifier</text><!--link algo.iterative.IterativeSolver to algo.iterative.RandomSolver--><path d="M235.8671,360.1927 C201.8146,397.5868 164.205,438.887 137.8951,467.7788 " fill="none" id="algo.iterative.IterativeSolver-algo.iterative.RandomSolver" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="231.0591,355.0759,249.7007,345.0016,241.4103,364.5021,231.0591,355.0759" style="stroke: #A80036; stroke-width: 1.0;"/><!--link algo.iterative.RandomSolver to algo.iterative.Modifier--><path d="M133.3404,542.0417 C160.998,575.9453 204.444,626.6707 247,666 C257.0229,675.2629 268.407,684.5247 279.3795,692.9179 " fill="none" id="algo.iterative.RandomSolver-algo.iterative.Modifier" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="283.4001,695.9692,278.6493,687.3419,279.4173,692.9464,273.8128,693.7144,283.4001,695.9692" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="20" x="215" y="616.0669">CM</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="20" x="215" y="631.1997">VM</text><!--link algo.iterative.IterativeSolver to algo.iterative.NaiveSolver--><path d="M377.4679,361.9405 C401.3533,398.8686 427.5282,439.3364 445.925,467.7788 " fill="none" id="algo.iterative.IterativeSolver-algo.iterative.NaiveSolver" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="371.4961,365.5967,366.5117,345.0016,383.2514,357.9932,371.4961,365.5967" style="stroke: #A80036; stroke-width: 1.0;"/><!--link algo.iterative.NaiveSolver to algo.iterative.Modifier--><path d="M446.065,542.0741 C419.2152,583.6632 375.9878,650.6203 349.6671,691.3898 " fill="none" id="algo.iterative.NaiveSolver-algo.iterative.Modifier" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="346.8589,695.7396,355.1009,690.348,349.5708,691.539,348.3799,686.0089,346.8589,695.7396" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="20" x="406" y="616.0669">CM</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="20" x="406" y="631.1997">VM</text><!--link algo.iterative.IterativeSolver to algo.iterative.CvCostCapacitySortedSolver--><path d="M457.7035,355.4956 C520.8815,394.1592 592.2376,437.8277 641.4429,467.9403 " fill="none" id="algo.iterative.IterativeSolver-algo.iterative.CvCostCapacitySortedSolver" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="453.9609,361.4121,440.5558,345.0016,461.2688,349.4707,453.9609,361.4121" style="stroke: #A80036; stroke-width: 1.0;"/><!--link algo.iterative.CvCostCapacitySortedSolver to algo.iterative.Modifier--><path d="M639.2334,542.0741 C567.7234,584.3127 451.913,652.7181 383.2403,693.2807 " fill="none" id="algo.iterative.CvCostCapacitySortedSolver-algo.iterative.Modifier" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="378.7861,695.9117,388.5695,694.7784,383.0911,693.3688,384.5008,687.8904,378.7861,695.9117" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="20" x="534" y="616.0669">CM</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="20" x="534" y="631.1997">VM</text><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="186" x="336" y="792.2822">UMLDoclet 2.0.3, PlantUML 1.2019.06</text><!--
@startuml
    namespace algo.iterative {

        class IterativeSolver [[IterativeSolver.html]] {
            {static} -LOGGER: Logger
            -instance: Instance
            +IterativeSolver(Modifier<Client>, Modifier<Vehicule>)
            +IterativeSolver(Instance, Modifier<Client>, Modifier<Vehicule>)
            +getInstance(): Instance
            +setInstance(Instance): void
            +solve(): boolean
            -iterativeSolver(): void
        }

        class RandomSolver [[RandomSolver.html]] {
            +RandomSolver()
            +RandomSolver(Instance)
        }

        interface Modifier<T> [[Modifier.html]] {
            {abstract} +modifyList(List<T>): void
        }

        class NaiveSolver [[NaiveSolver.html]] {
            +NaiveSolver()
            +NaiveSolver(Instance)
        }

        class CvCostCapacitySortedSolver [[CvCostCapacitySortedSolver.html]] {
            +CvCostCapacitySortedSolver()
            +CvCostCapacitySortedSolver(Instance)
        }

        algo.ISolver <|.. IterativeSolver
        IterativeSolver - -> Modifier: clientModifier\nvehiculeModifier
        IterativeSolver <|- - RandomSolver
        RandomSolver - -> Modifier: CM\nVM
        IterativeSolver <|- - NaiveSolver
        NaiveSolver - -> Modifier: CM\nVM
        IterativeSolver <|- - CvCostCapacitySortedSolver
        CvCostCapacitySortedSolver - -> Modifier: CM\nVM
    }

    namespace algo {
        interface ISolver [[../ISolver.html]] {
            {abstract} +getInstance(): Instance
            {abstract} +setInstance(Instance): void
            {abstract} +solve(): boolean
        }
    }

    center footer UMLDoclet 2.0.3, PlantUML 1.2019.06
@enduml

PlantUML version 1.2019.06(Fri May 24 19:10:25 CEST 2019)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.4+4-post-Debian-1
Operating System: Linux
OS Version: 4.19.0-5-amd64
Default Encoding: UTF-8
Language: fr
Country: FR
--></g></svg>