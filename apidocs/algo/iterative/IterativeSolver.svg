<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="366px" preserveAspectRatio="none" style="width:402px;height:366px;" version="1.1" viewBox="0 0 402 366" width="402px" zoomAndPan="magnify"><defs><filter height="300%" id="fs1r674pokwaj" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--class algo.iterative.IterativeSolver--><a href="IterativeSolver.html" target="_top" xlink:actuate="onRequest" xlink:show="new" xlink:title="IterativeSolver.html" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fs1r674pokwaj)" height="181.9844" id="algo.iterative.IterativeSolver" style="stroke: #A80036; stroke-width: 1.5;" width="385" x="6" y="152"/><ellipse cx="146.25" cy="170.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M149.2188,176.6094 Q148.6406,176.9063 148,177.0469 Q147.3594,177.2031 146.6563,177.2031 Q144.1563,177.2031 142.8281,175.5625 Q141.5156,173.9063 141.5156,170.7813 Q141.5156,167.6563 142.8281,166 Q144.1563,164.3438 146.6563,164.3438 Q147.3594,164.3438 148,164.5 Q148.6563,164.6563 149.2188,164.9531 L149.2188,167.6719 Q148.5938,167.0938 148,166.8281 Q147.4063,166.5469 146.7813,166.5469 Q145.4375,166.5469 144.75,167.625 Q144.0625,168.6875 144.0625,170.7813 Q144.0625,172.875 144.75,173.9531 Q145.4375,175.0156 146.7813,175.0156 Q147.4063,175.0156 148,174.75 Q148.5938,174.4688 149.2188,173.8906 L149.2188,176.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="96" x="166.75" y="169.9951">IterativeSolver</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="63" x="183.25" y="182.5791">algo.iterative</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="390" y1="189.9375" y2="189.9375"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="198.8398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="94" x="26" y="204.1479">LOGGER: Logger</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="211.6445"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="26" y="216.9526">instance: Instance</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="224.4492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="26" y="229.7573">clientModifier: Modifier&lt;Client&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="237.2539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="26" y="242.562">vehiculeModifier: Modifier&lt;Vehicule&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="390" y1="249.1563" y2="249.1563"/><ellipse cx="17" cy="261.0586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="26" y="263.3667">IterativeSolver(Modifier&lt;Client&gt;, Modifier&lt;Vehicule&gt;)</text><ellipse cx="17" cy="273.8633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="26" y="276.1714">IterativeSolver(Instance, Modifier&lt;Client&gt;, Modifier&lt;Vehicule&gt;)</text><ellipse cx="17" cy="286.668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="26" y="288.9761">getInstance(): Instance</text><ellipse cx="17" cy="299.4727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="26" y="301.7808">setInstance(Instance): void</text><ellipse cx="17" cy="312.2773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="26" y="314.5854">solve(): boolean</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="322.082"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="26" y="327.3901">iterativeSolver(): void</text></a><!--class algo.ISolver--><a href="../ISolver.html" target="_top" xlink:actuate="onRequest" xlink:show="new" xlink:title="../ISolver.html" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fs1r674pokwaj)" height="84.3516" id="algo.ISolver" style="stroke: #A80036; stroke-width: 1.5;" width="177" x="110" y="8"/><ellipse cx="170.75" cy="26.9688" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M166.6719,22.7344 L166.6719,20.5781 L174.0625,20.5781 L174.0625,22.7344 L171.5938,22.7344 L171.5938,30.8125 L174.0625,30.8125 L174.0625,32.9688 L166.6719,32.9688 L166.6719,30.8125 L169.1406,30.8125 L169.1406,22.7344 L166.6719,22.7344 Z "/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="47" x="191.25" y="25.9951">ISolver</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="21" x="204.25" y="38.5791">algo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="111" x2="286" y1="45.9375" y2="45.9375"/><ellipse cx="121" cy="57.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="128" x="130" y="60.1479">getInstance(): Instance</text><ellipse cx="121" cy="70.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="151" x="130" y="72.9526">setInstance(Instance): void</text><ellipse cx="121" cy="83.4492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="91" x="130" y="85.7573">solve(): boolean</text></a><!--link algo.ISolver to algo.iterative.IterativeSolver--><path d="M198.5,112.4439 C198.5,124.9804 198.5,138.3967 198.5,151.6816 " fill="none" id="algo.ISolver-algo.iterative.IterativeSolver" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="191.5001,112.3547,198.5,92.3547,205.5001,112.3546,191.5001,112.3547" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="186" x="111.5" y="353.2822">UMLDoclet 2.0.3, PlantUML 1.2019.06</text><!--
@startuml
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>IterativeSolver\n<size:10>algo.iterative" as algo.iterative.IterativeSolver [[IterativeSolver.html]] {
        {static} -LOGGER: Logger
        -instance: Instance
        -clientModifier: Modifier<Client>
        -vehiculeModifier: Modifier<Vehicule>
        +IterativeSolver(Modifier<Client>, Modifier<Vehicule>)
        +IterativeSolver(Instance, Modifier<Client>, Modifier<Vehicule>)
        +getInstance(): Instance
        +setInstance(Instance): void
        +solve(): boolean
        -iterativeSolver(): void
    }

    interface "<size:14>ISolver\n<size:10>algo" as algo.ISolver [[../ISolver.html]] {
        {abstract} +getInstance(): Instance
        {abstract} +setInstance(Instance): void
        {abstract} +solve(): boolean
    }

    algo.ISolver <|.. algo.iterative.IterativeSolver

    center footer UMLDoclet 2.0.3, PlantUML 1.2019.06
@enduml

PlantUML version 1.2019.06(Fri May 24 19:10:25 CEST 2019)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.4+4-post-Debian-1
Operating System: Linux
OS Version: 4.19.0-5-amd64
Default Encoding: UTF-8
Language: fr
Country: FR
--></g></svg>